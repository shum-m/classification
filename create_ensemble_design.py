from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_Dialog(object):
    def setupUi(self, Dialog):
        Dialog.setObjectName("Dialog")
        Dialog.resize(928, 629)
        self.gridLayout_10 = QtWidgets.QGridLayout(Dialog)
        self.gridLayout_10.setObjectName("gridLayout_10")
        self.ensembles_widget = QtWidgets.QTabWidget(Dialog)
        self.ensembles_widget.setObjectName("ensembles_widget")
        self.ensemble_model_average = QtWidgets.QWidget()
        self.ensemble_model_average.setObjectName("ensemble_model_average")
        self.gridLayout_9 = QtWidgets.QGridLayout(self.ensemble_model_average)
        self.gridLayout_9.setObjectName("gridLayout_9")
        self.models_type_box = QtWidgets.QGroupBox(self.ensemble_model_average)
        self.models_type_box.setObjectName("models_type_box")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.models_type_box)
        self.verticalLayout.setObjectName("verticalLayout")
        self.logistic_regression_label_ema = QtWidgets.QLabel(self.models_type_box)
        self.logistic_regression_label_ema.setObjectName("logistic_regression_label_ema")
        self.verticalLayout.addWidget(self.logistic_regression_label_ema)
        self.logistic_regression_count_ema = QtWidgets.QSpinBox(self.models_type_box)
        self.logistic_regression_count_ema.setMaximum(1000)
        self.logistic_regression_count_ema.setObjectName("logistic_regression_count_ema")
        self.verticalLayout.addWidget(self.logistic_regression_count_ema)
        self.naive_bc_label_ema = QtWidgets.QLabel(self.models_type_box)
        self.naive_bc_label_ema.setObjectName("naive_bc_label_ema")
        self.verticalLayout.addWidget(self.naive_bc_label_ema)
        self.naive_bc_count_ema = QtWidgets.QSpinBox(self.models_type_box)
        self.naive_bc_count_ema.setMaximum(1000)
        self.naive_bc_count_ema.setObjectName("naive_bc_count_ema")
        self.verticalLayout.addWidget(self.naive_bc_count_ema)
        self.decision_tree_label_ema = QtWidgets.QLabel(self.models_type_box)
        self.decision_tree_label_ema.setObjectName("decision_tree_label_ema")
        self.verticalLayout.addWidget(self.decision_tree_label_ema)
        self.decision_tree_count_ema = QtWidgets.QSpinBox(self.models_type_box)
        self.decision_tree_count_ema.setMinimum(0)
        self.decision_tree_count_ema.setMaximum(1000)
        self.decision_tree_count_ema.setObjectName("decision_tree_count_ema")
        self.verticalLayout.addWidget(self.decision_tree_count_ema)
        self.gridLayout_9.addWidget(self.models_type_box, 0, 0, 1, 1)
        self.ensembles_widget.addTab(self.ensemble_model_average, "")
        self.stacking_ensemble = QtWidgets.QWidget()
        self.stacking_ensemble.setObjectName("stacking_ensemble")
        self.gridLayout_8 = QtWidgets.QGridLayout(self.stacking_ensemble)
        self.gridLayout_8.setObjectName("gridLayout_8")
        self.meta_models_type_box = QtWidgets.QGroupBox(self.stacking_ensemble)
        self.meta_models_type_box.setObjectName("meta_models_type_box")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.meta_models_type_box)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.logistic_regression_label_se = QtWidgets.QLabel(self.meta_models_type_box)
        self.logistic_regression_label_se.setObjectName("logistic_regression_label_se")
        self.verticalLayout_2.addWidget(self.logistic_regression_label_se)
        self.logistic_regression_count_se = QtWidgets.QSpinBox(self.meta_models_type_box)
        self.logistic_regression_count_se.setObjectName("logistic_regression_count_se")
        self.verticalLayout_2.addWidget(self.logistic_regression_count_se)
        self.naive_bc_label_se = QtWidgets.QLabel(self.meta_models_type_box)
        self.naive_bc_label_se.setObjectName("naive_bc_label_se")
        self.verticalLayout_2.addWidget(self.naive_bc_label_se)
        self.naive_bc_count_se = QtWidgets.QSpinBox(self.meta_models_type_box)
        self.naive_bc_count_se.setObjectName("naive_bc_count_se")
        self.verticalLayout_2.addWidget(self.naive_bc_count_se)
        self.decision_tree_label_se = QtWidgets.QLabel(self.meta_models_type_box)
        self.decision_tree_label_se.setObjectName("decision_tree_label_se")
        self.verticalLayout_2.addWidget(self.decision_tree_label_se)
        self.decision_tree_count_se = QtWidgets.QSpinBox(self.meta_models_type_box)
        self.decision_tree_count_se.setMinimum(0)
        self.decision_tree_count_se.setObjectName("decision_tree_count_se")
        self.verticalLayout_2.addWidget(self.decision_tree_count_se)
        self.gridLayout_8.addWidget(self.meta_models_type_box, 0, 0, 1, 1)
        self.meta_model_type_box = QtWidgets.QGroupBox(self.stacking_ensemble)
        self.meta_model_type_box.setObjectName("meta_model_type_box")
        self.gridLayout_4 = QtWidgets.QGridLayout(self.meta_model_type_box)
        self.gridLayout_4.setObjectName("gridLayout_4")
        self.select_meta_model = QtWidgets.QComboBox(self.meta_model_type_box)
        self.select_meta_model.setMinimumSize(QtCore.QSize(351, 31))
        self.select_meta_model.setObjectName("select_meta_model")
        self.select_meta_model.addItem("")
        self.select_meta_model.addItem("")
        self.select_meta_model.addItem("")
        self.gridLayout_4.addWidget(self.select_meta_model, 0, 0, 1, 1)
        self.gridLayout_8.addWidget(self.meta_model_type_box, 1, 0, 1, 1)
        self.ensembles_widget.addTab(self.stacking_ensemble, "")
        self.gridLayout_10.addWidget(self.ensembles_widget, 0, 0, 3, 1)
        self.balance_box = QtWidgets.QGroupBox(Dialog)
        self.balance_box.setObjectName("balance_box")
        self.gridLayout_7 = QtWidgets.QGridLayout(self.balance_box)
        self.gridLayout_7.setObjectName("gridLayout_7")
        self.select_balance = QtWidgets.QComboBox(self.balance_box)
        self.select_balance.setMinimumSize(QtCore.QSize(351, 31))
        self.select_balance.setObjectName("select_balance")
        self.select_balance.addItem("")
        self.select_balance.addItem("")
        self.select_balance.addItem("")
        self.select_balance.addItem("")
        self.gridLayout_7.addWidget(self.select_balance, 0, 0, 1, 1)
        self.gridLayout_10.addWidget(self.balance_box, 0, 1, 1, 1)
        self.data_percent_box = QtWidgets.QGroupBox(Dialog)
        self.data_percent_box.setObjectName("data_percent_box")
        self.gridLayout = QtWidgets.QGridLayout(self.data_percent_box)
        self.gridLayout.setObjectName("gridLayout")
        self.data_percent = QtWidgets.QSpinBox(self.data_percent_box)
        self.data_percent.setObjectName("data_percent")
        self.gridLayout.addWidget(self.data_percent, 0, 0, 1, 1)
        self.gridLayout_10.addWidget(self.data_percent_box, 1, 1, 1, 1)
        self.input_data_box = QtWidgets.QGroupBox(Dialog)
        self.input_data_box.setObjectName("input_data_box")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.input_data_box)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.input_data_text = QtWidgets.QTextEdit(self.input_data_box)
        self.input_data_text.setObjectName("input_data_text")
        self.gridLayout_2.addWidget(self.input_data_text, 0, 0, 1, 1)
        self.gridLayout_10.addWidget(self.input_data_box, 2, 1, 1, 1)
        self.standardization_box = QtWidgets.QGroupBox(Dialog)
        self.standardization_box.setObjectName("standardization_box")
        self.gridLayout_5 = QtWidgets.QGridLayout(self.standardization_box)
        self.gridLayout_5.setObjectName("gridLayout_5")
        self.select_standartization = QtWidgets.QComboBox(self.standardization_box)
        self.select_standartization.setMinimumSize(QtCore.QSize(351, 31))
        self.select_standartization.setObjectName("select_standartization")
        self.select_standartization.addItem("")
        self.select_standartization.addItem("")
        self.select_standartization.addItem("")
        self.select_standartization.addItem("")
        self.select_standartization.addItem("")
        self.gridLayout_5.addWidget(self.select_standartization, 0, 0, 1, 1)
        self.gridLayout_10.addWidget(self.standardization_box, 3, 0, 1, 1)
        self.output_data_box = QtWidgets.QGroupBox(Dialog)
        self.output_data_box.setObjectName("output_data_box")
        self.gridLayout_3 = QtWidgets.QGridLayout(self.output_data_box)
        self.gridLayout_3.setObjectName("gridLayout_3")
        self.output_data_text = QtWidgets.QTextEdit(self.output_data_box)
        self.output_data_text.setObjectName("output_data_text")
        self.gridLayout_3.addWidget(self.output_data_text, 0, 0, 1, 1)
        self.gridLayout_10.addWidget(self.output_data_box, 3, 1, 2, 1)
        self.normalization_box = QtWidgets.QGroupBox(Dialog)
        self.normalization_box.setObjectName("normalization_box")
        self.gridLayout_6 = QtWidgets.QGridLayout(self.normalization_box)
        self.gridLayout_6.setObjectName("gridLayout_6")
        self.select_normalization = QtWidgets.QComboBox(self.normalization_box)
        self.select_normalization.setMinimumSize(QtCore.QSize(351, 31))
        self.select_normalization.setObjectName("select_normalization")
        self.select_normalization.addItem("")
        self.select_normalization.addItem("")
        self.select_normalization.addItem("")
        self.select_normalization.addItem("")
        self.select_normalization.addItem("")
        self.select_normalization.addItem("")
        self.gridLayout_6.addWidget(self.select_normalization, 0, 0, 1, 1)
        self.normalization_first = QtWidgets.QCheckBox(self.normalization_box)
        self.normalization_first.setMinimumSize(QtCore.QSize(171, 21))
        self.normalization_first.setObjectName("normalization_first")
        self.gridLayout_6.addWidget(self.normalization_first, 1, 0, 1, 1)
        self.gridLayout_10.addWidget(self.normalization_box, 4, 0, 2, 1)
        self.create_button = QtWidgets.QPushButton(Dialog)
        self.create_button.setObjectName("create_button")
        self.gridLayout_10.addWidget(self.create_button, 5, 1, 1, 1)

        self.retranslateUi(Dialog)
        self.ensembles_widget.setCurrentIndex(1)
        QtCore.QMetaObject.connectSlotsByName(Dialog)

    def retranslateUi(self, Dialog):
        _translate = QtCore.QCoreApplication.translate
        Dialog.setWindowTitle(_translate("Dialog", "Создание ансамбля"))
        self.models_type_box.setTitle(_translate("Dialog", "Тип и количество моделей"))
        self.logistic_regression_label_ema.setText(_translate("Dialog", "Логистическая регрессия"))
        self.naive_bc_label_ema.setText(_translate("Dialog", "Наивный байесовский классификатор"))
        self.decision_tree_label_ema.setText(_translate("Dialog", "Дерево решений"))
        self.ensembles_widget.setTabText(self.ensembles_widget.indexOf(self.ensemble_model_average), _translate("Dialog", "Модельное усреднение"))
        self.meta_models_type_box.setTitle(_translate("Dialog", "Тип и количество базовых моделей"))
        self.logistic_regression_label_se.setText(_translate("Dialog", "Логистическая регрессия"))
        self.naive_bc_label_se.setText(_translate("Dialog", "Наивный байесовский классификатор"))
        self.decision_tree_label_se.setText(_translate("Dialog", "Дерево решений"))
        self.meta_model_type_box.setTitle(_translate("Dialog", "Мета-модель"))
        self.select_meta_model.setItemText(0, _translate("Dialog", "Логистическая регрессия"))
        self.select_meta_model.setItemText(1, _translate("Dialog", "Наивный байес. классификатор"))
        self.select_meta_model.setItemText(2, _translate("Dialog", "Решающее дерево"))
        self.ensembles_widget.setTabText(self.ensembles_widget.indexOf(self.stacking_ensemble), _translate("Dialog", "Модельное наложение"))
        self.balance_box.setTitle(_translate("Dialog", "Балансировка классов"))
        self.select_balance.setItemText(0, _translate("Dialog", "Без балансировки"))
        self.select_balance.setItemText(1, _translate("Dialog", "Дублирование миноритарных примеров"))
        self.select_balance.setItemText(2, _translate("Dialog", "SMOTE (синтетические примеры)"))
        self.select_balance.setItemText(3, _translate("Dialog", "Удаление мажоритарных примеров"))
        self.data_percent_box.setTitle(_translate("Dialog", "Размер обучающей выборки"))
        self.data_percent.setSpecialValueText(_translate("Dialog", "В процентах"))
        self.input_data_box.setTitle(_translate("Dialog", "Входные данные"))
        self.input_data_text.setHtml(_translate("Dialog", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:7.8pt; font-weight:400; font-style:normal;\">\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p></body></html>"))
        self.input_data_text.setPlaceholderText(_translate("Dialog", "Индексы столбцов входных данных без пробелов, через запятую"))
        self.standardization_box.setTitle(_translate("Dialog", "Стандартизация данных"))
        self.select_standartization.setItemText(0, _translate("Dialog", "Без стандартизации"))
        self.select_standartization.setItemText(1, _translate("Dialog", "Метод Парето"))
        self.select_standartization.setItemText(2, _translate("Dialog", "Z-преобразование"))
        self.select_standartization.setItemText(3, _translate("Dialog", "Масштабирование стабильности переменной"))
        self.select_standartization.setItemText(4, _translate("Dialog", "Степенное преобразование"))
        self.output_data_box.setTitle(_translate("Dialog", "Выходные данные"))
        self.output_data_text.setHtml(_translate("Dialog", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:7.8pt; font-weight:400; font-style:normal;\">\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p></body></html>"))
        self.output_data_text.setPlaceholderText(_translate("Dialog", "Индекс столбца выходных данных"))
        self.normalization_box.setTitle(_translate("Dialog", "Нормализация данных"))
        self.select_normalization.setItemText(0, _translate("Dialog", "Без нормализации"))
        self.select_normalization.setItemText(1, _translate("Dialog", "Минимакс нормализация"))
        self.select_normalization.setItemText(2, _translate("Dialog", "Нормализация алгебраической функцией"))
        self.select_normalization.setItemText(3, _translate("Dialog", "Нормализация обобщенной алгебраической функцией"))
        self.select_normalization.setItemText(4, _translate("Dialog", "Нормализация обобщенным вариантом сигмоиды"))
        self.select_normalization.setItemText(5, _translate("Dialog", "Нормализация арктангенсом"))
        self.normalization_first.setText(_translate("Dialog", "Сначала нормализация"))
        self.create_button.setText(_translate("Dialog", "Создать ансамбль"))
